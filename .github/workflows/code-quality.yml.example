# Example GitHub Actions workflow for code quality checks
# 
# To enable, rename this file to .github/workflows/code-quality.yml
# 
# This workflow runs on all pull requests and pushes to main branch

name: Code Quality

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read

env:
  PIP_DISABLE_PIP_VERSION_CHECK: "1"

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
        cache-dependency-path: |
          requirements.txt
          requirements-dev.txt

    - name: Upgrade pip
      run: python -m pip install --upgrade pip

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install mypy

    - name: Run Black (check formatting)
      run: black --check .

    - name: Run Ruff (linting)
      run: ruff check .

    - name: Run mypy (type checking)
      run: mypy . --config-file pyproject.toml

    - name: Run tests
      run: pytest --cov=. --cov-report=xml --cov-report=term

    - name: Check code complexity
      run: |
        pip install radon
        echo "=== High Complexity Functions (>20) ==="
        radon cc . -n D --exclude="tests/*,colorama/*,.pytest_cache/*" || true
        echo "=== Low Maintainability Files (<10) ==="
        radon mi . -n C --exclude="tests/*,colorama/*,.pytest_cache/*" || true

    - name: Upload coverage to Codecov (optional)
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
      continue-on-error: true

  pre-commit:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
        cache-dependency-path: requirements-dev.txt

    - name: Upgrade pip
      run: python -m pip install --upgrade pip

    - name: Install pre-commit
      run: pip install pre-commit

    - name: Run pre-commit hooks
      run: pre-commit run --all-files
