# Mutation Testing workflow
# Validates test quality by introducing mutations and checking if tests catch them
# This workflow is run manually or on a schedule to avoid long CI times

name: Mutation Testing

on:
  workflow_dispatch: # Manual trigger
  schedule:
    - cron: "0 0 * * 0" # Run weekly on Sunday at midnight

permissions:
  contents: read

env:
  PIP_DISABLE_PIP_VERSION_CHECK: "1"

jobs:
  mutation-test:
    runs-on: ubuntu-latest
    timeout-minutes: 120 # Mutation testing can take a long time

    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-tk

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install package with development dependencies
        run: pip install -e ".[dev]"

      - name: Run mutation testing
        run: |
          # Run mutmut using configuration from pyproject.toml
          mutmut run || true

      - name: Generate mutation report
        run: |
          mutmut results
          mutmut html || true

      - name: Upload mutation report
        uses: actions/upload-artifact@v4
        with:
          name: mutation-report
          path: html/
          retention-days: 30

      - name: Mutation testing summary
        run: |
          echo "## Mutation Testing Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          mutmut results >> $GITHUB_STEP_SUMMARY || echo "Mutation testing report generated" >> $GITHUB_STEP_SUMMARY
