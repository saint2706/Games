name: Mobile Packages

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: "Label used for the uploaded release artifacts"
        required: true
      smoke_test_game:
        description: "Optional game slug launched during smoke tests"
        required: false

env:
  ANDROID_KEYSTORE_B64: ${{ secrets.ANDROID_KEYSTORE_B64 }}
  ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
  ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
  MACOS_CODESIGN_IDENTITY: ${{ secrets.MACOS_CODESIGN_IDENTITY }}
  MACOS_NOTARIZATION_PROFILE: ${{ secrets.MACOS_NOTARIZATION_PROFILE }}
  IOS_SIGNING_PROFILE: ${{ secrets.IOS_SIGNING_PROFILE }}
  IOS_TEAM_ID: ${{ secrets.IOS_TEAM_ID }}

jobs:
  mobile-build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: android
            builder_image: ghcr.io/kivy/buildozer:stable
            artifact_glob: build/mobile/android/bin/*.apk
            build_command: |
              python3 -m pip install --upgrade pip
              python3 -m pip install .[mobile]
              buildozer -v android release
          - target: macos
            builder_image: ghcr.io/beeware/briefcase:latest
            artifact_glob: dist/macOS/*.dmg
            build_command: |
              python3 -m pip install --upgrade pip
              python3 -m pip install .[mobile]
              briefcase package macOS -r
          - target: ios
            builder_image: ghcr.io/beeware/briefcase:latest
            artifact_glob: dist/iOS/*.ipa
            build_command: |
              python3 -m pip install --upgrade pip
              python3 -m pip install .[mobile]
              briefcase package iOS -r

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare Android keystore
        if: matrix.target == 'android' && env.ANDROID_KEYSTORE_B64 != ''
        run: |
          mkdir -p build/mobile/signing
          echo "$ANDROID_KEYSTORE_B64" | base64 -d > build/mobile/signing/release.keystore
          echo "ANDROID_KEYSTORE_PATH=$(pwd)/build/mobile/signing/release.keystore" >> "$GITHUB_ENV"

      - name: Pull builder image
        run: docker pull ${{ matrix.builder_image }}

      - name: Build ${{ matrix.target }} artifact
        env:
          BUILD_COMMAND: ${{ matrix.build_command }}
        run: |
          set -euo pipefail
          docker run --rm \
            -e ANDROID_KEYSTORE_PATH="${ANDROID_KEYSTORE_PATH:-}" \
            -e ANDROID_KEYSTORE_PASSWORD="${ANDROID_KEYSTORE_PASSWORD}" \
            -e ANDROID_KEY_PASSWORD="${ANDROID_KEY_PASSWORD}" \
            -e MACOS_CODESIGN_IDENTITY="${MACOS_CODESIGN_IDENTITY}" \
            -e MACOS_NOTARIZATION_PROFILE="${MACOS_NOTARIZATION_PROFILE}" \
            -e IOS_SIGNING_PROFILE="${IOS_SIGNING_PROFILE}" \
            -e IOS_TEAM_ID="${IOS_TEAM_ID}" \
            -e MOBILE_SMOKE_GAME="${{ github.event.inputs.smoke_test_game }}" \
            -v "$(pwd)":/workspace \
            -w /workspace \
            ${{ matrix.builder_image }} \
            bash -lc "$BUILD_COMMAND"

      - name: Install launcher for smoke test
        if: github.event.inputs.smoke_test_game != ''
        run: |
          python -m pip install --upgrade pip
          python -m pip install .

      - name: Smoke-test build output
        if: github.event.inputs.smoke_test_game != ''
        run: |
          python -m games_collection.launcher --game "${{ github.event.inputs.smoke_test_game }}" --smoke-test

      - name: Stage ${{ matrix.target }} artifacts
        run: |
          set -euo pipefail
          mkdir -p build/artifacts/${{ matrix.target }}
          shopt -s nullglob
          files=(${{ matrix.artifact_glob }})
          if [ ${#files[@]} -eq 0 ]; then
            echo "No artifacts produced for pattern: ${{ matrix.artifact_glob }}" >&2
            exit 1
          fi
          cp "${files[@]}" build/artifacts/${{ matrix.target }}/

      - name: Upload ${{ matrix.target }} package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-${{ github.event.inputs.release_tag }}
          if-no-files-found: error
          path: build/artifacts/${{ matrix.target }}
