[build-system]
requires = ["setuptools>=68.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src", "."]
include = [
    "games_collection*",
    "card_games",
    "paper_games",
    "dice_games",
    "logic_games",
    "word_games",
    "common",
    "scripts",
]
exclude = [
    "tests*",
    "docs*",
    "examples*",
    "build*",
    "dist*",
    "*.egg-info",
    "colorama*",  # Exclude vendored colorama
]

[tool.setuptools.package-data]
"*" = ["*.md", "*.txt", "*.rst"]
"games_collection.catalog" = ["*.json"]

[project]
name = "games-collection"
version = "2.0.1"
description = "A comprehensive collection of classic card, paper, dice, logic, and word games with AI opponents and both CLI and GUI interfaces"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "saint2706", email = "45678566+saint2706@users.noreply.github.com"},
]
maintainers = [
    {name = "saint2706", email = "45678566+saint2706@users.noreply.github.com"},
]
keywords = [
    "games",
    "card-games",
    "board-games",
    "uno",
    "poker",
    "blackjack",
    "tic-tac-toe",
    "chess",
    "ai",
    "gui",
    "cli",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Games/Entertainment",
    "Topic :: Games/Entertainment :: Board Games",
    "Topic :: Games/Entertainment :: Puzzle Games",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "colorama>=0.4.6",
    "packaging>=23.0",
    "requests>=2.31",
]

[project.urls]
Homepage = "https://github.com/saint2706/Games"
Documentation = "https://github.com/saint2706/Games#readme"
Repository = "https://github.com/saint2706/Games"
Issues = "https://github.com/saint2706/Games/issues"
Changelog = "https://github.com/saint2706/Games/blob/master/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    # Core testing
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-timeout>=2.1.0",
    # GUI testing
    "pytest-qt>=4.0.0",
    "pyqt5",
    # Performance testing
    "pytest-benchmark>=4.0.0",
    # Code quality
    "black>=24.0",
    "ruff>=0.8",
    "mdformat>=0.7.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
    "radon>=6.0",
    # Coverage reporting
    "coverage[toml]>=7.0.0",
    # Mutation testing
    "mutmut>=2.4.0",
    # Additional utilities
    "freezegun>=1.2.0",
    "responses>=0.23.0",
    "pytest-mock>=3.10.0",
]
gui = [
    "pyqt5>=5.15",
    "pygame>=2.0",
]

[project.scripts]
# Main launcher
games-collection = "games_collection.launcher:main"

# Card Games
games-uno = "games_collection.games.card.uno.uno:main"
games-poker = "games_collection.games.card.poker.poker:main"
games-blackjack = "games_collection.games.card.blackjack.blackjack:main"
games-hearts = "games_collection.games.card.hearts.hearts:main"
games-spades = "games_collection.games.card.spades.spades:main"
games-bridge = "games_collection.games.card.bridge.bridge:main"
games-gin-rummy = "games_collection.games.card.gin_rummy.gin_rummy:main"
games-go-fish = "games_collection.games.card.go_fish.go_fish:main"
games-crazy-eights = "games_collection.games.card.crazy_eights.crazy_eights:main"
games-war = "games_collection.games.card.war.war:main"
games-solitaire = "games_collection.games.card.solitaire.solitaire:main"
games-bluff = "games_collection.games.card.bluff.bluff:main"
games-cribbage = "games_collection.games.card.cribbage.__main__:main"
games-euchre = "games_collection.games.card.euchre.__main__:main"
games-rummy500 = "games_collection.games.card.rummy500.__main__:main"

# Paper Games  
games-tic-tac-toe = "games_collection.games.paper.tic_tac_toe.tic_tac_toe:main"
games-battleship = "games_collection.games.paper.battleship.battleship:main"
games-checkers = "games_collection.games.paper.checkers.checkers:main"
games-connect-four = "games_collection.games.paper.connect_four.connect_four:main"
games-othello = "games_collection.games.paper.othello.othello:main"
games-dots-and-boxes = "games_collection.games.paper.dots_and_boxes.dots_and_boxes:main"
games-hangman = "games_collection.games.paper.hangman.hangman:main"
games-nim = "games_collection.games.paper.nim.nim:main"
games-sudoku = "games_collection.games.paper.sudoku.sudoku:main"
games-mancala = "games_collection.games.paper.mancala.mancala:main"

# Dice Games
games-craps = "games_collection.games.dice.craps.craps:main"
games-bunco = "games_collection.games.dice.bunco.bunco:main"
games-liars-dice = "games_collection.games.dice.liars_dice.liars_dice:main"

# Word Games
games-unscramble = "games_collection.games.word.unscramble.unscramble:main"
games-wordle = "games_collection.games.word.wordle.wordle:main"

# Logic Games
games-mastermind = "games_collection.games.logic.mastermind.mastermind:main"
games-codebreaker = "games_collection.games.logic.codebreaker.codebreaker:main"

[tool.black]
line-length = 160

[tool.ruff]
line-length = 160

[tool.ruff.lint]
select = ["E", "F", "I"]  # Removed C90 complexity checks for now (31 violations to address separately)
ignore = ["E402"]  # Allow imports not at top

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Imports in __init__ are often for re-export
"tests/fixtures/__init__.py" = ["F403"]  # Star imports in test fixtures are intentional

# Complexity checking disabled for now - 31 functions exceed threshold
# Re-enable after refactoring: select = ["E", "F", "I", "C90"]
# [tool.ruff.lint.mccabe]
# max-complexity = 10

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
no_strict_optional = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.radon]
# Radon configuration for code complexity analysis
# Run: radon cc . -a -s
# cc: Cyclomatic Complexity
# mi: Maintainability Index

[tool.mdformat]
wrap = 120

[tool.mutmut]
# Mutation testing configuration
# Paths to mutate
paths_to_mutate = ["src/games_collection/games/paper/", "src/games_collection/games/card/"]

# Paths to exclude from mutation
paths_to_exclude = "*/tests/*,*/demo*.py,*/gui.py,*/__main__.py,*/__init__.py"

# Test runner command
runner = "python -m pytest tests/ -x --assert=plain -o log_cli=false"

# Backup directory
backup = true

# Use coverage data to only mutate covered lines
use_coverage = true

# Test time multiplier (mutations taking longer than this are killed)
test_time_multiplier = 2.0

# Test time base (minimum time to wait)
test_time_base = 0.0

# Swallow output
swallow_output = true

# Dictionary synonyms
dict_synonyms = ["Struct", "NamedStruct", "NamedTuple", "namedtuple"]
