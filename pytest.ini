[pytest]
# pytest configuration for Games project

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Minimum supported Python version
minversion = 7.0

# Test paths
testpaths = tests

# Coverage options
addopts =
    --strict-markers
    --tb=short
    --disable-warnings
    -v

# Markers for categorizing tests
markers =
    unit: Unit tests for individual functions and classes
    integration: Integration tests for CLI and module interactions
    gui: GUI tests requiring display (may be skipped in CI)
    performance: Performance benchmarking tests
    slow: Tests that take more than a few seconds
    network: Tests that require network connectivity

# Console output
console_output_style = progress

# Timeout (in seconds) for individual tests
# timeout = 300

# Coverage
[coverage:run]
source = games_collection.games.paper,games_collection.games.card
omit =
    */tests/*
    */__pycache__/*
    */.venv/*
    */venv/*
    */demo*.py
    */__main__.py

[coverage:report]
precision = 2
show_missing = True
skip_covered = False

# Fail if coverage is below this percentage
fail_under = 90

exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    @abc.abstractmethod
    except ImportError:
    if not tkinter_available:

[coverage:html]
directory = htmlcov
